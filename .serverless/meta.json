{
  "E:\\Notopia_Backend\\notopia_NEST": {
    "versionSfCore": null,
    "versionFramework": "4.4.0",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "notopia",
            "service": "notopia-backend",
            "useDotenv": true,
            "plugins": [
              "serverless-offline"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "environment": {
                "DATABASE_HOST": "notopia-main-db-1.craw64mkg3cv.eu-central-1.rds.amazonaws.com",
                "DATABASE_PORT": "5432",
                "DATABASE_USERNAME": "postgres",
                "DATABASE_PASSWORD": "<REDACTED>",
                "DATABASE_NAME": "notopia_main_db"
              },
              "region": "eu-central-1",
              "stage": "prod",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "MainLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notopia-backend-prod-main"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "notopia-backend",
                                "prod",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notopia-backend-prod*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notopia-backend-prod*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "notopia-backend",
                            "prod",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "MainLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-central-1-69002036-41cf",
                        "S3Key": "serverless/notopia-backend/prod/1727123723931-2024-09-23T20:35:23.931Z/notopia-backend.zip"
                      },
                      "Handler": "dist/serverless.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notopia-backend-prod-main",
                      "MemorySize": 1024,
                      "Timeout": 10,
                      "Environment": {
                        "Variables": {
                          "DATABASE_HOST": "notopia-main-db-1.craw64mkg3cv.eu-central-1.rds.amazonaws.com",
                          "DATABASE_PORT": "5432",
                          "DATABASE_USERNAME": "postgres",
                          "DATABASE_PASSWORD": "<REDACTED>",
                          "DATABASE_NAME": "notopia_main_db"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "MainLogGroup"
                    ]
                  },
                  "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "MainLambdaFunction"
                      },
                      "CodeSha256": "Bnu/T1XFSEVnvvK1lKV33go5aRXRuTayEQwDRoJlC1w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "prod-notopia-backend",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceProxyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{proxy+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "MainLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "MainLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodProxyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProxyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "MainLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "MainLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1727123718458": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "prod"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodOptions",
                      "ApiGatewayMethodAny",
                      "ApiGatewayMethodProxyVarAny"
                    ]
                  },
                  "MainLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-central-1-69002036-41cf",
                    "Export": {
                      "Name": "sls-notopia-backend-prod-ServerlessDeploymentBucketName"
                    }
                  },
                  "MainLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk"
                    },
                    "Export": {
                      "Name": "sls-notopia-backend-prod-MainLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/prod"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-notopia-backend-prod-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "package": {
              "exclude": [
                "images/**",
                "node_modules/**",
                ".git/**",
                ".env"
              ],
              "artifactsS3KeyDirname": "serverless/notopia-backend/prod/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-eu-central-1-69002036-41cf",
              "artifact": "E:\\Notopia_Backend\\notopia_NEST\\.serverless\\notopia-backend.zip",
              "artifactDirectoryName": "serverless/notopia-backend/prod/1727123723931-2024-09-23T20:35:23.931Z"
            },
            "functions": {
              "main": {
                "handler": "dist/serverless.handler",
                "events": [
                  {
                    "http": {
                      "method": "any",
                      "path": "",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "ANY"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "method": "any",
                      "path": "{proxy+}",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "timeout": 10,
                "name": "notopia-backend-prod-main",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk"
              }
            }
          },
          "configFileDirPath": "E:\\Notopia_Backend\\notopia_NEST",
          "config": {
            "type": "env"
          },
          "options": {
            "stage": "prod"
          },
          "stage": "prod",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "E:\\Notopia_Backend\\notopia_NEST",
    "serviceConfigFileName": "serverless.yaml",
    "service": {
      "org": "notopia",
      "service": "notopia-backend",
      "useDotenv": true,
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "environment": {
          "DATABASE_HOST": "notopia-main-db-1.craw64mkg3cv.eu-central-1.rds.amazonaws.com",
          "DATABASE_PORT": "5432",
          "DATABASE_USERNAME": "postgres",
          "DATABASE_PASSWORD": "<REDACTED>",
          "DATABASE_NAME": "notopia_main_db"
        },
        "region": "eu-central-1",
        "stage": "prod",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "MainLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notopia-backend-prod-main"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "notopia-backend",
                          "prod",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notopia-backend-prod*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notopia-backend-prod*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "notopia-backend",
                      "prod",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "MainLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-central-1-69002036-41cf",
                  "S3Key": "serverless/notopia-backend/prod/1727123723931-2024-09-23T20:35:23.931Z/notopia-backend.zip"
                },
                "Handler": "dist/serverless.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "notopia-backend-prod-main",
                "MemorySize": 1024,
                "Timeout": 10,
                "Environment": {
                  "Variables": {
                    "DATABASE_HOST": "notopia-main-db-1.craw64mkg3cv.eu-central-1.rds.amazonaws.com",
                    "DATABASE_PORT": "5432",
                    "DATABASE_USERNAME": "postgres",
                    "DATABASE_PASSWORD": "<REDACTED>",
                    "DATABASE_NAME": "notopia_main_db"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MainLogGroup"
              ]
            },
            "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MainLambdaFunction"
                },
                "CodeSha256": "Bnu/T1XFSEVnvvK1lKV33go5aRXRuTayEQwDRoJlC1w="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "prod-notopia-backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1727123718458": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "prod"
              },
              "DependsOn": [
                "ApiGatewayMethodOptions",
                "ApiGatewayMethodAny",
                "ApiGatewayMethodProxyVarAny"
              ]
            },
            "MainLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MainLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-central-1-69002036-41cf",
              "Export": {
                "Name": "sls-notopia-backend-prod-ServerlessDeploymentBucketName"
              }
            },
            "MainLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk"
              },
              "Export": {
                "Name": "sls-notopia-backend-prod-MainLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/prod"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-notopia-backend-prod-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "package": {
        "exclude": [
          "images/**",
          "node_modules/**",
          ".git/**",
          ".env"
        ],
        "artifactsS3KeyDirname": "serverless/notopia-backend/prod/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-eu-central-1-69002036-41cf",
        "artifact": "E:\\Notopia_Backend\\notopia_NEST\\.serverless\\notopia-backend.zip",
        "artifactDirectoryName": "serverless/notopia-backend/prod/1727123723931-2024-09-23T20:35:23.931Z"
      },
      "functions": {
        "main": {
          "handler": "dist/serverless.handler",
          "events": [
            {
              "http": {
                "method": "any",
                "path": "",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "ANY"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "method": "any",
                "path": "{proxy+}",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "timeout": 10,
          "name": "notopia-backend-prod-main",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "MainLambdaVersionXHD9KNLKXyHzcI33JdmychFHO3gI5dCLM4ztxk"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\r\norg: notopia\r\nservice: notopia-backend\r\n\r\nuseDotenv: true\r\n\r\nplugins:\r\n  - serverless-offline\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  environment:\r\n    DATABASE_HOST: ${env:DATABASE_HOST}\r\n    DATABASE_PORT: ${env:DATABASE_PORT}\r\n    DATABASE_USERNAME: ${env:DATABASE_USERNAME}\r\n    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD}\r\n    DATABASE_NAME: ${env:DATABASE_NAME}\r\n  region: eu-central-1\r\n\r\npackage:\r\n  exclude:\r\n    - images/**\r\n    - node_modules/**\r\n    - .git/**\r\n    - .env\r\n\r\nfunctions:\r\n  main:\r\n    handler: dist/serverless.handler\r\n    events:\r\n      - http:\r\n          method: ANY\r\n          path: /\r\n          cors:\r\n            origin: '*'\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n      - http:\r\n          method: ANY\r\n          path: '{proxy+}'\r\n    timeout: 10\r\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "prod"
    },
    "error": null,
    "params": {},
    "machineId": "5c5b6a4b782d9d4b7b05aabec8a0fe2e",
    "stage": "prod",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "c5dc043b-4ef9-4927-a30e-faca06878240",
    "orgName": "notopia",
    "userId": "tk3W42JCbcCwmQwy6j",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "notopia",
    "subscription": null,
    "userEmail": "notopia77@gmail.com",
    "serviceProviderAwsRegion": "eu-central-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "692859908906",
    "projectType": "traditional",
    "versionSf": "4.4.0",
    "serviceProviderAwsCfStackName": "notopia-backend-prod",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-central-1:692859908906:stack/notopia-backend-prod/72762cf0-79df-11ef-8598-0a02d97d53c9",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-central-1:692859908906:stack/notopia-backend-prod/72762cf0-79df-11ef-8598-0a02d97d53c9",
    "serviceProviderAwsCfStackCreated": "2024-09-23T19:10:07.773Z",
    "serviceProviderAwsCfStackUpdated": "2024-09-23T20:39:08.816Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "MainLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-central-1:692859908906:function:notopia-backend-prod-main:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notopia-backend-prod-MainLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://9ct9dslox7.execute-api.eu-central-1.amazonaws.com/prod",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-notopia-backend-prod-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-central-1-69002036-41cf",
        "ExportName": "sls-notopia-backend-prod-ServerlessDeploymentBucketName"
      }
    ]
  }
}